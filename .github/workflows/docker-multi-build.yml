name: CI Docker Multi Job

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-amd64:
    runs-on: ubuntu-latest
    outputs:
      ts: ${{ steps.timestamp.outputs.ts }}
    steps:
      - uses: actions/checkout@v2

      - name: Get timestamp
        id: timestamp
        run: echo "ts=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            plsy1/ecchi:${{ steps.timestamp.outputs.ts }}-amd64
            plsy1/ecchi:latest-amd64
          cache-from: type=registry,ref=plsy1/ecchi:buildcache
          cache-to: type=registry,ref=plsy1/ecchi:buildcache,mode=max

  docker-arm64:
    runs-on: ubuntu-latest
    needs: []
    outputs:
      ts: ${{ steps.timestamp.outputs.ts }}
    steps:
      - uses: actions/checkout@v2

      - name: Get timestamp
        id: timestamp
        run: echo "ts=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            plsy1/ecchi:${{ steps.timestamp.outputs.ts }}-arm64
            plsy1/ecchi:latest-arm64
          cache-from: type=registry,ref=plsy1/ecchi:buildcache
          cache-to: type=registry,ref=plsy1/ecchi:buildcache,mode=max

  docker-manifest:
    runs-on: ubuntu-latest
    needs: [docker-amd64, docker-arm64]
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag plsy1/ecchi:latest \
            plsy1/ecchi:latest-amd64 \
            plsy1/ecchi:latest-arm64
